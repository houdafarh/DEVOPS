pipeline {
     environment {
registry = "soniaaloui/timesheetproject"
registryCredential = 'DockerCredentials'
dockerImage = '' }
    agent any
stages {
stage("Cloning Project from Git") {
steps { 
git branch: 'Sonia', credentialsId: 'GitCredentials', url: 'https://github.com/houdafarh/DEVOPS.git'
}
}
stage("Build") {
steps {
dir("TimesheetProject"){
bat "mvn compile"}
}}
stage("Unit tests") {
steps {
dir("TimesheetProject"){
bat "mvn test"}
}}

stage("Code Quality") {
steps {
dir("TimesheetProject"){
bat "mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install"
bat "mvn sonar:sonar"}
}}

stage("Clean- Package"){
steps {
dir("TimesheetProject"){
bat "mvn clean package"}
}}

stage("Deploy with Nexus") {
steps {
dir("TimesheetProject"){
bat "mvn deploy:deploy-file -DgroupId=tn.esprit.spring -DartifactId=Timesheet-spring-boot-core-data-jpa-mvc-REST-1 -Dversion=1.1 -DgeneratePom=true -Dpackaging=war -DrepositoryId=deploymentRepo -Durl=http://localhost:8081/repository/maven-releases/ -Dfile=target/Timesheet-spring-boot-core-data-jpa-mvc-REST-1-1.1.war -DskipTests"
}}
}
  stage("Docker : Build image") {
steps {
   dir("TimesheetProject"){
script {
   dockerImage = docker.build registry}}}}
stage("Docker : Push image") {
steps {
   dir("TimesheetProject"){
script {
docker.withRegistry( '', registryCredential ) {
   dockerImage.push()}}}}}
}
post {
    failure  {
    mail(
        body: "<p>unfortunately a problem has occured during the build</p>",
        charset: 'UTF-8',
        mimeType: 'text/html',
        subject: "Jenkins update build status",
        to: "soniaaloui240@gmail.com"
)}
    success{
    mail(
        body: "<p>build success</p>",
        charset: 'UTF-8',
        mimeType: 'text/html',
        subject: "Jenkins update build status",
        to: "soniaaloui240@gmail.com"
)}
}
}